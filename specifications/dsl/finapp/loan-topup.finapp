app LoanTopupApp {
    name: "Loan Top-up"
    id: "com.banking.loantopup"
    version: "1.0.0"
    platforms: [ios, android, web]
    theme: {
        primaryColor: "#2E5BFF"
        secondaryColor: "#00C48C"
        backgroundColor: "#F7F9FC"
        errorColor: "#FF647C"
        textColor: "#1A2138"
    }
    regions: [
        { 
            id: "UK"
            displayName: "United Kingdom" 
            locale: "en-GB"
            currency: "GBP"
            currencySymbol: "£"
            dateFormat: "DD/MM/YYYY"
            regulatoryBody: "FCA"
        },
        { 
            id: "HK"
            displayName: "Hong Kong" 
            locale: ["en-HK", "zh-HK"]
            currency: "HKD"
            currencySymbol: "HK$"
            dateFormat: "DD/MM/YYYY"
            regulatoryBody: "HKMA"
        }
    ]
    customerSegments: [
        {
            id: "Basic"
            interestRates: {
                "UK": "6.9% APR",
                "HK": "7.2% APR"
            }
            maxTopupAmounts: {
                "UK": 25000,
                "HK": 200000
            }
            minTopupAmounts: {
                "UK": 1000,
                "HK": 10000
            }
            benefits: {
                "UK": "No early repayment charges",
                "HK": "Standard repayment flexibility"
            }
        },
        {
            id: "Wealth"
            interestRates: {
                "UK": "5.4% APR",
                "HK": "5.8% APR"
            }
            maxTopupAmounts: {
                "UK": 100000,
                "HK": 800000
            }
            minTopupAmounts: {
                "UK": 5000,
                "HK": 50000
            }
            benefits: {
                "UK": "Premier rate guarantee and priority service",
                "HK": "Jade member priority processing and rate discount"
            }
        }
    ]
}

// Models for loan top-up feature
model Loan {
    id: string required
    customerId: string required
    originalAmount: number required
    currentBalance: number required
    monthlyPayment: number required
    remainingTerm: number required
    interestRate: number required
    isEligibleForTopup: boolean required
    startDate: date required
    currency: string required
    region: string required
    status: string required
    lastPaymentDate: date
    nextPaymentDate: date required
}

model TopupOffer {
    loanId: string required
    maxTopupAmount: number required
    minTopupAmount: number required
    interestRate: number required
    isPreApproved: boolean required
    expiryDate: date required
    customerSegment: string required
    specialPromotionId: string
}

model TopupAmount {
    amount: number required
    newTotalLoan: number required
    newMonthlyPayment: number required
    remainingTerm: number required
    totalInterestPayable: number required
    totalRepayable: number required
    effectiveDate: date required
}

model TopupConfirmation {
    topupId: string required
    amount: number required
    reference: string required
    status: string required
    processingDate: date required
    disbursementDate: date required
    firstNewPaymentDate: date required
    benefitApplied: string
}

model PromotionalBanner {
    id: string required
    title: string required
    description: string required
    startDate: date required
    endDate: date required
    imageUrl: string
    actionText: string
    actionLink: string
    region: string required
    customerSegment: string
    timeOfDay: string
    specialOffer: string
}

validation LoanEligibility {
    on: Loan
    rule: "isEligibleForTopup && status === 'active'"
    message: "Loan must be active and eligible for top-up"
}

validation TopupAmount {
    on: TopupAmount
    rule: "amount >= minTopupAmount && amount <= maxTopupAmount"
    message: "Top-up amount must be within the allowed limits"
}

// Screens for loan top-up journey
screen LoansOverview {
    title: "My Loans"
    initial

    dataFunctions: [
        {
            name: "formatCurrency"
            params: ["value", "region"]
            expression: "region === 'UK' ? `£${value.toFixed(2)}` : `HK$${value.toFixed(2)}`"
        },
        {
            name: "formatDate"
            params: ["dateValue", "region"]
            expression: "new Intl.DateTimeFormat(region === 'UK' ? 'en-GB' : 'en-HK', { dateStyle: 'medium' }).format(new Date(dateValue))"
        },
        {
            name: "getTimeBasedOffer"
            params: []
            expression: "const hour = new Date().getHours(); return hour < 6 ? 'Night Owl Banking Benefits' : (hour >= 19 ? 'Evening Banking Benefits' : null);"
        },
        {
            name: "getSeasonalOffer"
            params: ["region"]
            expression: `
                const month = new Date().getMonth();
                const date = new Date().getDate();
                if (region === 'UK') {
                    if (month === 2) return 'Spring Home Improvement Promotion';
                    if (month === 4) return 'Summer Holiday Financing Options';
                    if (month === 11 && date === 24) return 'Festive payment holiday option';
                } else if (region === 'HK') {
                    if (month === 0 && date === 25) return 'Lunar New Year Special Offers';
                }
                return null;
            `
        }
    ]

    layout: {
        type: stack
        components: [
            {
                type: header
                title: "My Loans"
            },
            {
                type: conditional
                condition: "getTimeBasedOffer() !== null"
                components: [
                    {
                        type: banner
                        title: "{{getTimeBasedOffer()}}"
                        properties: {
                            style: "promotional",
                            dismissable: true
                        }
                    }
                ]
            },
            {
                type: conditional
                condition: "getSeasonalOffer(userProfile.region) !== null"
                components: [
                    {
                        type: banner
                        title: "{{getSeasonalOffer(userProfile.region)}}"
                        properties: {
                            style: "promotional",
                            dismissable: true
                        }
                    }
                ]
            },
            {
                type: list
                data: "loans"
                itemComponent: {
                    type: card
                    components: [
                        {
                            type: stack
                            properties: {
                                direction: "horizontal",
                                alignment: "space-between"
                            }
                            components: [
                                {
                                    type: text
                                    value: "Loan #{{item.id}}"
                                    properties: {
                                        style: "heading"
                                    }
                                },
                                {
                                    type: conditional
                                    condition: "item.isEligibleForTopup"
                                    components: [
                                        {
                                            type: badge
                                            text: "Top-up Available"
                                            properties: {
                                                style: "highlight"
                                            }
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            type: stack
                            components: [
                                {
                                    type: fieldDisplay
                                    label: "Current Balance"
                                    value: "{{formatCurrency(item.currentBalance, item.region)}}"
                                },
                                {
                                    type: fieldDisplay
                                    label: "Monthly Payment"
                                    value: "{{formatCurrency(item.monthlyPayment, item.region)}}"
                                },
                                {
                                    type: fieldDisplay
                                    label: "Next Payment Date"
                                    value: "{{formatDate(item.nextPaymentDate, item.region)}}"
                                }
                            ]
                        },
                        {
                            type: conditional
                            condition: "item.isEligibleForTopup"
                            components: [
                                {
                                    type: button
                                    text: "View Top-up Offer"
                                    properties: {
                                        style: "primary"
                                    }
                                    actions: {
                                        onTap: {
                                            navigate: TopupOffer
                                            params: {
                                                loanId: "{{item.id}}"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                }
            }
        ]
    }

    onLoad: {
        apiCall: getLoans
    }
}

screen TopupOffer {
    title: "Loan Top-up Offer"
    
    params: {
        loanId: string required
    }
    
    dataFunctions: [
        {
            name: "formatCurrency"
            params: ["value", "region"]
            expression: "region === 'UK' ? `£${value.toFixed(2)}` : `HK$${value.toFixed(2)}`"
        },
        {
            name: "formatDate"
            params: ["dateValue", "region"]
            expression: "new Intl.DateTimeFormat(region === 'UK' ? 'en-GB' : 'en-HK', { dateStyle: 'medium' }).format(new Date(dateValue))"
        },
        {
            name: "getWelcomeMessage"
            params: ["customerName", "region"]
            expression: `
                const locale = region === 'UK' ? 'en-GB' : 'en-HK';
                const timeOfDay = new Date().getHours();
                let greeting = '';
                
                if (timeOfDay < 12) greeting = 'Good morning';
                else if (timeOfDay < 18) greeting = 'Good afternoon';
                else greeting = 'Good evening';
                
                return `${greeting}, ${customerName}!`;
            `
        }
    ]
    
    layout: {
        type: stack
        components: [
            {
                type: header
                title: "Your Pre-approved Offer"
                subtitle: "{{getWelcomeMessage(userProfile.name, userProfile.region)}}"
            },
            {
                type: card
                components: [
                    {
                        type: text
                        value: "You're pre-approved for a loan top-up"
                        properties: {
                            style: "heading"
                        }
                    },
                    {
                        type: text
                        value: "Based on your good standing, you can borrow additional funds on your existing loan."
                        properties: {
                            style: "body"
                        }
                    },
                    {
                        type: divider
                    },
                    {
                        type: fieldDisplay
                        label: "Maximum Top-up Amount"
                        value: "{{formatCurrency(topupOffer.maxTopupAmount, userProfile.region)}}"
                        properties: {
                            style: "highlight"
                        }
                    },
                    {
                        type: fieldDisplay
                        label: "Interest Rate"
                        value: "{{userProfile.customerSegment === 'Basic' ? (userProfile.region === 'UK' ? '6.9% APR' : '7.2% APR') : (userProfile.region === 'UK' ? '5.4% APR' : '5.8% APR')}}"
                    },
                    {
                        type: fieldDisplay
                        label: "Current Loan Balance"
                        value: "{{formatCurrency(loan.currentBalance, userProfile.region)}}"
                    },
                    {
                        type: fieldDisplay
                        label: "Current Monthly Payment"
                        value: "{{formatCurrency(loan.monthlyPayment, userProfile.region)}}"
                    },
                    {
                        type: button
                        text: "Select Amount"
                        properties: {
                            style: "primary"
                        }
                        actions: {
                            onTap: {
                                navigate: TopupAmountSelection
                                params: {
                                    loanId: "{{params.loanId}}",
                                    offerId: "{{topupOffer.id}}"
                                }
                            }
                        }
                    },
                    {
                        type: button
                        text: "No thanks, maybe later"
                        properties: {
                            style: "text"
                        }
                        actions: {
                            onTap: {
                                navigate: LoansOverview
                            }
                        }
                    }
                ]
            },
            {
                type: card
                components: [
                    {
                        type: text
                        value: "{{userProfile.customerSegment === 'Basic' ? (userProfile.region === 'UK' ? 'No early repayment charges' : 'Standard repayment flexibility') : (userProfile.region === 'UK' ? 'Premier rate guarantee and priority service' : 'Jade member priority processing and rate discount')}}"
                        properties: {
                            style: "highlight",
                            icon: "star"
                        }
                    }
                ]
            }
        ]
    }
    
    onLoad: {
        apiCalls: [
            {
                id: getLoan
                params: {
                    loanId: "{{params.loanId}}"
                }
                onSuccess: {
                    store: {
                        key: "loan"
                        value: "{{result}}"
                    }
                }
            },
            {
                id: getTopupOffer
                params: {
                    loanId: "{{params.loanId}}"
                }
                onSuccess: {
                    store: {
                        key: "topupOffer"
                        value: "{{result}}"
                    }
                }
            }
        ]
    }
}

screen TopupAmountSelection {
    title: "Select Top-up Amount"
    
    params: {
        loanId: string required,
        offerId: string required
    }
    
    dataFunctions: [
        {
            name: "formatCurrency"
            params: ["value", "region"]
            expression: "region === 'UK' ? `£${value.toFixed(2)}` : `HK$${value.toFixed(2)}`"
        },
        {
            name: "getPresetAmounts"
            params: ["minAmount", "maxAmount", "segment"]
            expression: `
                const spread = maxAmount - minAmount;
                const step = spread / 4;
                return [
                    Math.round(minAmount + step),
                    Math.round(minAmount + step * 2),
                    Math.round(minAmount + step * 3)
                ];
            `
        },
        {
            name: "calculateNewMonthlyPayment"
            params: ["currentBalance", "topupAmount", "interestRate", "remainingTerm"]
            expression: `
                const totalLoan = currentBalance + topupAmount;
                const monthlyInterestRate = interestRate / 100 / 12;
                return totalLoan * monthlyInterestRate * Math.pow(1 + monthlyInterestRate, remainingTerm) / (Math.pow(1 + monthlyInterestRate, remainingTerm) - 1);
            `
        },
        {
            name: "calculateTotalInterest"
            params: ["monthlyPayment", "remainingTerm", "totalLoan"]
            expression: "monthlyPayment * remainingTerm - totalLoan"
        }
    ]
    
    state: {
        selectedAmount: number,
        customAmount: boolean,
        newMonthlyPayment: number,
        newTotalLoan: number,
        totalInterest: number
    }
    
    layout: {
        type: stack
        components: [
            {
                type: header
                title: "Select Top-up Amount"
                subtitle: "Choose how much you'd like to borrow"
            },
            {
                type: card
                components: [
                    {
                        type: text
                        value: "Pre-set Amount Options"
                        properties: {
                            style: "heading"
                        }
                    },
                    {
                        type: stack
                        properties: {
                            direction: "horizontal",
                            spacing: "medium"
                        }
                        components: [
                            {
                                type: forEach
                                data: "{{getPresetAmounts(topupOffer.minTopupAmount, topupOffer.maxTopupAmount, userProfile.customerSegment)}}"
                                itemComponent: {
                                    type: button
                                    text: "{{formatCurrency(item, userProfile.region)}}"
                                    properties: {
                                        style: "{{state.selectedAmount === item ? 'primary' : 'outline'}}"
                                    }
                                    actions: {
                                        onTap: {
                                            setState: [
                                                {
                                                    key: "selectedAmount"
                                                    value: "{{item}}"
                                                },
                                                {
                                                    key: "customAmount"
                                                    value: false
                                                },
                                                {
                                                    key: "newMonthlyPayment"
                                                    value: "{{calculateNewMonthlyPayment(loan.currentBalance, item, topupOffer.interestRate, loan.remainingTerm)}}"
                                                },
                                                {
                                                    key: "newTotalLoan"
                                                    value: "{{loan.currentBalance + item}}"
                                                },
                                                {
                                                    key: "totalInterest"
                                                    value: "{{calculateTotalInterest(calculateNewMonthlyPayment(loan.currentBalance, item, topupOffer.interestRate, loan.remainingTerm), loan.remainingTerm, loan.currentBalance + item)}}"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    {
                        type: button
                        text: "Enter Custom Amount"
                        properties: {
                            style: "{{state.customAmount ? 'primary' : 'outline'}}"
                        }
                        actions: {
                            onTap: {
                                setState: [
                                    {
                                        key: "customAmount"
                                        value: true
                                    }
                                ]
                            }
                        }
                    },
                    {
                        type: conditional
                        condition: "state.customAmount"
                        components: [
                            {
                                type: stack
                                components: [
                                    {
                                        type: slider
                                        min: "{{topupOffer.minTopupAmount}}"
                                        max: "{{topupOffer.maxTopupAmount}}"
                                        step: 100
                                        value: "{{state.selectedAmount || topupOffer.minTopupAmount}}"
                                        onChange: {
                                            setState: [
                                                {
                                                    key: "selectedAmount"
                                                    value: "{{value}}"
                                                },
                                                {
                                                    key: "newMonthlyPayment"
                                                    value: "{{calculateNewMonthlyPayment(loan.currentBalance, value, topupOffer.interestRate, loan.remainingTerm)}}"
                                                },
                                                {
                                                    key: "newTotalLoan"
                                                    value: "{{loan.currentBalance + value}}"
                                                },
                                                {
                                                    key: "totalInterest"
                                                    value: "{{calculateTotalInterest(calculateNewMonthlyPayment(loan.currentBalance, value, topupOffer.interestRate, loan.remainingTerm), loan.remainingTerm, loan.currentBalance + value)}}"
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        type: input
                                        inputType: "number"
                                        label: "Enter amount"
                                        placeholder: "Amount"
                                        value: "{{state.selectedAmount}}"
                                        validation: {
                                            minValue: "{{topupOffer.minTopupAmount}}"
                                            maxValue: "{{topupOffer.maxTopupAmount}}"
                                            message: "Amount must be between {{formatCurrency(topupOffer.minTopupAmount, userProfile.region)}} and {{formatCurrency(topupOffer.maxTopupAmount, userProfile.region)}}"
                                        }
                                        onChange: {
                                            setState: [
                                                {
                                                    key: "selectedAmount"
                                                    value: "{{value}}"
                                                },
                                                {
                                                    key: "newMonthlyPayment"
                                                    value: "{{calculateNewMonthlyPayment(loan.currentBalance, value, topupOffer.interestRate, loan.remainingTerm)}}"
                                                },
                                                {
                                                    key: "newTotalLoan"
                                                    value: "{{loan.currentBalance + value}}"
                                                },
                                                {
                                                    key: "totalInterest"
                                                    value: "{{calculateTotalInterest(calculateNewMonthlyPayment(loan.currentBalance, value, topupOffer.interestRate, loan.remainingTerm), loan.remainingTerm, loan.currentBalance + value)}}"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        type: divider
                    },
                    {
                        type: conditional
                        condition: "state.selectedAmount > 0"
                        components: [
                            {
                                type: text
                                value: "Impact on your loan"
                                properties: {
                                    style: "heading"
                                }
                            },
                            {
                                type: fieldDisplay
                                label: "Top-up Amount"
                                value: "{{formatCurrency(state.selectedAmount, userProfile.region)}}"
                                properties: {
                                    style: "highlight"
                                }
                            },
                            {
                                type: fieldDisplay
                                label: "New Total Balance"
                                value: "{{formatCurrency(state.newTotalLoan, userProfile.region)}}"
                            },
                            {
                                type: fieldDisplay
                                label: "New Monthly Payment"
                                value: "{{formatCurrency(state.newMonthlyPayment, userProfile.region)}}"
                            },
                            {
                                type: fieldDisplay
                                label: "Remaining Term"
                                value: "{{loan.remainingTerm}} months"
                            },
                            {
                                type: fieldDisplay
                                label: "Total Interest Payable"
                                value: "{{formatCurrency(state.totalInterest, userProfile.region)}}"
                            }
                        ]
                    },
                    {
                        type: button
                        text: "Continue"
                        properties: {
                            style: "primary",
                            disabled: "{{!state.selectedAmount || state.selectedAmount < topupOffer.minTopupAmount || state.selectedAmount > topupOffer.maxTopupAmount}}"
                        }
                        actions: {
                            onTap: {
                                navigate: TopupTermsReview
                                params: {
                                    loanId: "{{params.loanId}}",
                                    offerId: "{{params.offerId}}",
                                    selectedAmount: "{{state.selectedAmount}}",
                                    newMonthlyPayment: "{{state.newMonthlyPayment}}",
                                    newTotalLoan: "{{state.newTotalLoan}}",
                                    totalInterest: "{{state.totalInterest}}"
                                }
                            }
                        }
                    },
                    {
                        type: button
                        text: "Back"
                        properties: {
                            style: "text"
                        }
                        actions: {
                            onTap: {
                                navigate: TopupOffer
                                params: {
                                    loanId: "{{params.loanId}}"
                                }
                            }
                        }
                    }
                ]
            }
        ]
    }
    
    onLoad: {
        apiCalls: [
            {
                id: getLoan
                params: {
                    loanId: "{{params.loanId}}"
                }
                onSuccess: {
                    store: {
                        key: "loan"
                        value: "{{result}}"
                    }
                }
            },
            {
                id: getTopupOffer
                params: {
                    id: "{{params.offerId}}"
                }
                onSuccess: {
                    store: {
                        key: "topupOffer"
                        value: "{{result}}"
                    }
                }
            }
        ]
    }
}

screen TopupTermsReview {
    title: "Review Terms"
    
    params: {
        loanId: string required,
        offerId: string required,
        selectedAmount: number required,
        newMonthlyPayment: number required,
        newTotalLoan: number required,
        totalInterest: number required
    }
    
    dataFunctions: [
        {
            name: "formatCurrency"
            params: ["value", "region"]
            expression: "region === 'UK' ? `£${value.toFixed(2)}` : `HK$${value.toFixed(2)}`"
        },
        {
            name: "formatDate"
            params: ["dateValue", "region"]
            expression: "new Intl.DateTimeFormat(region === 'UK' ? 'en-GB' : 'en-HK', { dateStyle: 'medium' }).format(new Date(dateValue))"
        },
        {
            name: "getTotalRepayable"
            params: ["monthlyPayment", "remainingTerm"]
            expression: "monthlyPayment * remainingTerm"
        },
        {
            name: "getRegulatorInfo"
            params: ["region"]
            expression: "region === 'UK' ? 'Financial Conduct Authority (FCA)' : 'Hong Kong Monetary Authority (HKMA)'"
        },
        {
            name: "getCoolingOffPeriod"
            params: ["region"]
            expression: "region === 'UK' ? '14 days' : '7 days'"
        }
    ]
    
    layout: {
        type: stack
        components: [
            {
                type: header
                title: "Review Terms"
                subtitle: "Please review the loan top-up terms before proceeding"
            },
            {
                type: card
                components: [
                    {
                        type: text
                        value: "Loan Top-up Details"
                        properties: {
                            style: "heading"
                        }
                    },
                    {
                        type: table
                        rows: [
                            {
                                label: "Original Loan Amount"
                                value: "{{formatCurrency(loan.originalAmount, userProfile.region)}}"
                            },
                            {
                                label: "Current Balance"
                                value: "{{formatCurrency(loan.currentBalance, userProfile.region)}}"
                            },
                            {
                                label: "Top-up Amount"
                                value: "{{formatCurrency(params.selectedAmount, userProfile.region)}}"
                                properties: {
                                    highlight: true
                                }
                            },
                            {
                                label: "New Total Balance"
                                value: "{{formatCurrency(params.newTotalLoan, userProfile.region)}}"
                            },
                            {
                                label: "Current Monthly Payment"
                                value: "{{formatCurrency(loan.monthlyPayment, userProfile.region)}}"
                            },
                            {
                                label: "New Monthly Payment"
                                value: "{{formatCurrency(params.newMonthlyPayment, userProfile.region)}}"
                                properties: {
                                    highlight: true
                                }
                            },
                            {
                                label: "Remaining Term"
                                value: "{{loan.remainingTerm}} months"
                            },
                            {
                                label: "Interest Rate"
                                value: "{{userProfile.customerSegment === 'Basic' ? (userProfile.region === 'UK' ? '6.9% APR' : '7.2% APR') : (userProfile.region === 'UK' ? '5.4% APR' : '5.8% APR')}}"
                            },
                            {
                                label: "Total Interest Payable"
                                value: "{{formatCurrency(params.totalInterest, userProfile.region)}}"
                            },
                            {
                                label: "Total Repayable"
                                value: "{{formatCurrency(getTotalRepayable(params.newMonthlyPayment, loan.remainingTerm), userProfile.region)}}"
                            }
                        ]
                    }
                ]
            },
            {
                type: card
                components: [
                    {
                        type: text
                        value: "Regulatory Information"
                        properties: {
                            style: "heading"
                        }
                    },
                    {
                        type: text
                        value: "Representative APR: {{userProfile.customerSegment === 'Basic' ? (userProfile.region === 'UK' ? '6.9%' : '7.2%') : (userProfile.region === 'UK' ? '5.4%' : '5.8%')}}"
                        properties: {
                            style: "body"
                        }
                    },
                    {
                        type: text
                        value: "This top-up is regulated by the {{getRegulatorInfo(userProfile.region)}}"
                        properties: {
                            style: "body"
                        }
                    },
                    {
                        type: text
                        value: "You have a cooling-off period of {{getCoolingOffPeriod(userProfile.region)}} after confirmation"
                        properties: {
                            style: "body"
                        }
                    }
                ]
            },
            {
                type: card
                components: [
                    {
                        type: text
                        value: "{{userProfile.customerSegment === 'Basic' ? (userProfile.region === 'UK' ? 'No early repayment charges' : 'Standard repayment flexibility') : (userProfile.region === 'UK' ? 'Premier rate guarantee and priority service' : 'Jade member priority processing and rate discount')}}"
                        properties: {
                            style: "highlight",
                            icon: "star"
                        }
                    }
                ]
            },
            {
                type: button
                text: "Accept"
                properties: {
                    style: "primary"
                }
                actions: {
                    onTap: {
                        navigate: TopupConfirmation
                        params: {
                            loanId: "{{params.loanId}}",
                            offerId: "{{params.offerId}}",
                            selectedAmount: "{{params.selectedAmount}}",
                            newMonthlyPayment: "{{params.newMonthlyPayment}}",
                            newTotalLoan: "{{params.newTotalLoan}}"
                        }
                    }
                }
            },
            {
                type: button
                text: "Go Back"
                properties: {
                    style: "text"
                }
                actions: {
                    onTap: {
                        navigate: TopupAmountSelection
                        params: {
                            loanId: "{{params.loanId}}",
                            offerId: "{{params.offerId}}"
                        }
                    }
                }
            }
        ]
    }
    
    onLoad: {
        apiCalls: [
            {
                id: getLoan
                params: {
                    loanId: "{{params.loanId}}"
                }
                onSuccess: {
                    store: {
                        key: "loan"
                        value: "{{result}}"
                    }
                }
            }
        ]
    }
}

screen TopupConfirmation {
    title: "Confirmation"
    
    params: {
        loanId: string required,
        offerId: string required,
        selectedAmount: number required,
        newMonthlyPayment: number required,
        newTotalLoan: number required
    }
    
    state: {
        termsAgreed: boolean,
        isProcessing: boolean,
        isComplete: boolean,
        reference: string
    }
    
    dataFunctions: [
        {
            name: "formatCurrency"
            params: ["value", "region"]
            expression: "region === 'UK' ? `£${value.toFixed(2)}` : `HK$${value.toFixed(2)}`"
        },
        {
            name: "formatDate"
            params: ["dateValue", "region"]
            expression: "new Intl.DateTimeFormat(region === 'UK' ? 'en-GB' : 'en-HK', { dateStyle: 'medium' }).format(new Date(dateValue))"
        },
        {
            name: "getNextWorkingDay"
            params: ["date", "region"]
            expression: `
                const result = new Date(date);
                result.setDate(result.getDate() + 1);
                
                // Skip weekends
                if (result.getDay() === 0) result.setDate(result.getDate() + 1); // Skip Sunday
                if (result.getDay() === 6) result.setDate(result.getDate() + 2); // Skip Saturday
                
                return result;
            `
        },
        {
            name: "getFirstPaymentDate"
            params: ["region"]
            expression: `
                const result = new Date();
                result.setMonth(result.getMonth() + 1);
                return result;
            `
        },
        {
            name: "getFundsAvailabilityMessage"
            params: ["region", "time"]
            expression: `
                const hour = time.getHours();
                const isWeekend = time.getDay() === 0 || time.getDay() === 6;
                const isHoliday = false; // Would check against holiday calendar
                
                if (isHoliday) return "Bank holiday processing notice";
                if (isWeekend) return "Weekend processing notice";
                
                if (region === 'UK') {
                    if (hour < 6) return "Night owl banking - funds available immediately";
                    if (hour >= 17) return "Evening processing confirmation";
                    return "Funds available immediately";
                } else if (region === 'HK') {
                    if (hour < 6) return "After-hours processing - funds available next working day";
                    if (hour >= 17) return "Evening processing - funds available next working day";
                    return "Funds available immediately";
                }
                
                return "Funds available immediately";
            `
        },
        {
            name: "getSpecialNotice"
            params: ["region", "date"]
            expression: `
                const month = date.getMonth();
                const day = date.getDate();
                
                if (region === 'UK') {
                    if (month === 11 && day === 24) return "Holiday period service notice";
                } else if (region === 'HK') {
                    if (month === 0 && day === 25) return "Lunar New Year holiday processing notice";
                }
                
                const hour = date.getHours();
                if (hour < 6) {
                    return region === 'UK' ? "Night owl banking service active" : "After-hours processing notice";
                }
                
                return null;
            `
        }
    ]
    
    layout: {
        type: conditional
        condition: "!state.isComplete"
        trueComponent: {
            type: stack
            components: [
                {
                    type: header
                    title: "Confirm Top-up"
                    subtitle: "Please review and confirm your loan top-up"
                },
                {
                    type: card
                    components: [
                        {
                            type: text
                            value: "You are about to top up your loan with the following details:"
                            properties: {
                                style: "body"
                            }
                        },
                        {
                            type: table
                            rows: [
                                {
                                    label: "Top-up Amount"
                                    value: "{{formatCurrency(params.selectedAmount, userProfile.region)}}"
                                    properties: {
                                        highlight: true
                                    }
                                },
                                {
                                    label: "New Total Loan"
                                    value: "{{formatCurrency(params.newTotalLoan, userProfile.region)}}"
                                },
                                {
                                    label: "New Monthly Payment"
                                    value: "{{formatCurrency(params.newMonthlyPayment, userProfile.region)}}"
                                },
                                {
                                    label: "First New Payment Date"
                                    value: "{{formatDate(getFirstPaymentDate(userProfile.region), userProfile.region)}}"
                                }
                            ]
                        },
                        {
                            type: checkbox
                            label: "I confirm that I have read and agree to the terms and conditions"
                            checked: "{{state.termsAgreed}}"
                            onChange: {
                                setState: [
                                    {
                                        key: "termsAgreed"
                                        value: "{{value}}"
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    type: card
                    components: [
                        {
                            type: text
                            value: "Region-specific disclosures:"
                            properties: {
                                style: "heading"
                            }
                        },
                        {
                            type: conditional
                            condition: "userProfile.region === 'UK'"
                            components: [
                                {
                                    type: text
                                    value: "Credit reference agency notice and financial ombudsman details"
                                    properties: {
                                        style: "body"
                                    }
                                }
                            ]
                        },
                        {
                            type: conditional
                            condition: "userProfile.region === 'HK'"
                            components: [
                                {
                                    type: text
                                    value: "HKMA regulatory notice and complaint procedure details"
                                    properties: {
                                        style: "body"
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    type: conditional
                    condition: "state.isProcessing"
                    trueComponent: {
                        type: progressIndicator
                        message: "Processing your top-up request..."
                    }
                    falseComponent: {
                        type: stack
                        components: [
                            {
                                type: button
                                text: "Confirm Top-up"
                                properties: {
                                    style: "primary",
                                    disabled: "{{!state.termsAgreed}}"
                                }
                                actions: {
                                    onTap: {
                                        setState: [
                                            {
                                                key: "isProcessing"
                                                value: true
                                            }
                                        ]
                                        apiCall: {
                                            id: createTopup
                                            body: {
                                                loanId: "{{params.loanId}}",
                                                amount: "{{params.selectedAmount}}",
                                                interestRate: "{{topupOffer.interestRate}}"
                                            }
                                            onSuccess: {
                                                store: {
                                                    key: "topupConfirmation"
                                                    value: "{{result}}"
                                                }
                                                setState: [
                                                    {
                                                        key: "isComplete"
                                                        value: true
                                                    },
                                                    {
                                                        key: "isProcessing"
                                                        value: false
                                                    },
                                                    {
                                                        key: "reference"
                                                        value: "{{result.reference}}"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            },
                            {
                                type: button
                                text: "Go Back"
                                properties: {
                                    style: "text"
                                }
                                actions: {
                                    onTap: {
                                        navigate: TopupTermsReview
                                        params: {
                                            loanId: "{{params.loanId}}",
                                            offerId: "{{params.offerId}}",
                                            selectedAmount: "{{params.selectedAmount}}",
                                            newMonthlyPayment: "{{params.newMonthlyPayment}}",
                                            newTotalLoan: "{{params.newTotalLoan}}"
                                        }
                                    }
                                }
                            }
                        ]
                    }
                }
            ]
        }
        falseComponent: {
            type: stack
            components: [
                {
                    type: header
                    title: "Top-up Successful!"
                    subtitle: "Your loan top-up has been approved"
                },
                {
                    type: successIcon
                    properties: {
                        size: "large",
                        animation: true
                    }
                },
                {
                    type: card
                    components: [
                        {
                            type: text
                            value: "Confirmation Details"
                            properties: {
                                style: "heading"
                            }
                        },
                        {
                            type: table
                            rows: [
                                {
                                    label: "Top-up Amount"
                                    value: "{{formatCurrency(params.selectedAmount, userProfile.region)}}"
                                    properties: {
                                        highlight: true
                                    }
                                },
                                {
                                    label: "Reference Number"
                                    value: "{{state.reference}}"
                                },
                                {
                                    label: "Date"
                                    value: "{{formatDate(new Date(), userProfile.region)}}"
                                }
                            ]
                        },
                        {
                            type: text
                            value: "{{getFundsAvailabilityMessage(userProfile.region, new Date())}}"
                            properties: {
                                style: "body"
                            }
                        },
                        {
                            type: conditional
                            condition: "getSpecialNotice(userProfile.region, new Date()) !== null"
                            components: [
                                {
                                    type: text
                                    value: "{{getSpecialNotice(userProfile.region, new Date())}}"
                                    properties: {
                                        style: "highlight"
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    type: button
                    text: "View Updated Loan Details"
                    properties: {
                        style: "primary"
                    }
                    actions: {
                        onTap: {
                            navigate: LoansOverview
                        }
                    }
                },
                {
                    type: button
                    text: "Return to Dashboard"
                    properties: {
                        style: "outline"
                    }
                    actions: {
                        onTap: {
                            navigate: LoansOverview
                        }
                    }
                }
            ]
        }
    }
    
    onLoad: {
        apiCalls: [
            {
                id: getLoan
                params: {
                    loanId: "{{params.loanId}}"
                }
                onSuccess: {
                    store: {
                        key: "loan"
                        value: "{{result}}"
                    }
                }
            },
            {
                id: getTopupOffer
                params: {
                    id: "{{params.offerId}}"
                }
                onSuccess: {
                    store: {
                        key: "topupOffer"
                        value: "{{result}}"
                    }
                }
            }
        ]
    }
}

screen TopupSuccess {
    title: "Top-up Complete"
    
    params: {
        topupId: string required
    }
    
    dataFunctions: [
        {
            name: "formatCurrency"
            params: ["value", "region"]
            expression: "region === 'UK' ? `£${value.toFixed(2)}` : `HK$${value.toFixed(2)}`"
        },
        {
            name: "formatDate"
            params: ["dateValue", "region"]
            expression: "new Intl.DateTimeFormat(region === 'UK' ? 'en-GB' : 'en-HK', { dateStyle: 'medium' }).format(new Date(dateValue))"
        }
    ]
    
    layout: {
        type: stack
        components: [
            {
                type: successIcon
                properties: {
                    size: "large",
                    animation: true
                }
            },
            {
                type: header
                title: "Top-up Successful!"
                subtitle: "Your loan top-up has been processed"
            },
            {
                type: card
                components: [
                    {
                        type: fieldDisplay
                        label: "Amount"
                        value: "{{formatCurrency(topupConfirmation.amount, userProfile.region)}}"
                    },
                    {
                        type: fieldDisplay
                        label: "Reference"
                        value: "{{topupConfirmation.reference}}"
                    },
                    {
                        type: fieldDisplay
                        label: "Date"
                        value: "{{formatDate(topupConfirmation.processingDate, userProfile.region)}}"
                    },
                    {
                        type: fieldDisplay
                        label: "Funds Available"
                        value: "{{formatDate(topupConfirmation.disbursementDate, userProfile.region)}}"
                    }
                ]
            },
            {
                type: card
                components: [
                    {
                        type: text
                        value: "Next Steps"
                        properties: {
                            style: "heading"
                        }
                    },
                    {
                        type: text
                        value: "Your funds will be credited to your account. Your new monthly payment of {{formatCurrency(loan.monthlyPayment + (topupConfirmation.amount / loan.remainingTerm), userProfile.region)}} will start from {{formatDate(topupConfirmation.firstNewPaymentDate, userProfile.region)}}."
                        properties: {
                            style: "body"
                        }
                    },
                    {
                        type: conditional
                        condition: "topupConfirmation.benefitApplied !== null && topupConfirmation.benefitApplied !== undefined"
                        components: [
                            {
                                type: text
                                value: "{{topupConfirmation.benefitApplied}}"
                                properties: {
                                    style: "highlight",
                                    icon: "star"
                                }
                            }
                        ]
                    }
                ]
            },
            {
                type: button
                text: "View Updated Loan Details"
                properties: {
                    style: "primary"
                }
                actions: {
                    onTap: {
                        navigate: LoansOverview
                    }
                }
            },
            {
                type: button
                text: "Return to Dashboard"
                properties: {
                    style: "outline"
                }
                actions: {
                    onTap: {
                        navigate: LoansOverview
                    }
                }
            }
        ]
    }
    
    onLoad: {
        apiCalls: [
            {
                id: getTopupConfirmation
                params: {
                    id: "{{params.topupId}}"
                }
                onSuccess: {
                    store: {
                        key: "topupConfirmation"
                        value: "{{result}}"
                    }
                }
            },
            {
                id: getLoan
                params: {
                    loanId: "{{topupConfirmation.loanId}}"
                }
                onSuccess: {
                    store: {
                        key: "loan"
                        value: "{{result}}"
                    }
                }
            }
        ]
    }
}

// App navigation
navigation: {
    type: stack
    items: [
        {
            title: "Loans"
            screen: LoansOverview
        }
    ]
}

// API configuration
api: {
    baseUrl: "https://api.bankingservices.example/v1"
    mock
    endpoints: [
        {
            id: getLoans
            path: "/loans"
            method: GET
            response: Loan[]
        },
        {
            id: getLoan
            path: "/loans/{loanId}"
            method: GET
            params: [
                {
                    name: loanId
                    type: string
                    required
                }
            ]
            response: Loan
        },
        {
            id: getTopupOffer
            path: "/loans/{loanId}/topup-offer"
            method: GET
            params: [
                {
                    name: loanId
                    type: string
                    required
                }
            ]
            response: TopupOffer
        },
        {
            id: createTopup
            path: "/loans/topup"
            method: POST
            body: {
                loanId: string required,
                amount: number required,
                interestRate: number required
            }
            response: TopupConfirmation
        },
        {
            id: getTopupConfirmation
            path: "/loans/topup/{id}"
            method: GET
            params: [
                {
                    name: id
                    type: string
                    required
                }
            ]
            response: TopupConfirmation
        }
    ]
}

// Mock data for development
mockData: {
    loans: [
        {
            id: "loan1",
            customerId: "cust1",
            originalAmount: 15000,
            currentBalance: 10000,
            monthlyPayment: 300,
            remainingTerm: 36,
            interestRate: 5.9,
            isEligibleForTopup: true,
            startDate: "2023-01-15",
            currency: "GBP",
            region: "UK",
            status: "active",
            lastPaymentDate: "2023-03-15",
            nextPaymentDate: "2023-04-15"
        },
        {
            id: "loan2",
            customerId: "cust1",
            originalAmount: 5000,
            currentBalance: 4200,
            monthlyPayment: 150,
            remainingTerm: 30,
            interestRate: 6.5,
            isEligibleForTopup: false,
            startDate: "2023-02-10",
            currency: "GBP",
            region: "UK",
            status: "active",
            lastPaymentDate: "2023-03-10",
            nextPaymentDate: "2023-04-10"
        },
        {
            id: "loan3",
            customerId: "cust2",
            originalAmount: 200000,
            currentBalance: 180000,
            monthlyPayment: 5000,
            remainingTerm: 40,
            interestRate: 5.4,
            isEligibleForTopup: true,
            startDate: "2023-01-05",
            currency: "HKD",
            region: "HK",
            status: "active",
            lastPaymentDate: "2023-03-05",
            nextPaymentDate: "2023-04-05"
        }
    ],
    topupOffers: [
        {
            id: "offer1",
            loanId: "loan1",
            maxTopupAmount: 5000,
            minTopupAmount: 1000,
            interestRate: 6.9,
            isPreApproved: true,
            expiryDate: "2023-06-15",
            customerSegment: "Basic"
        },
        {
            id: "offer2",
            loanId: "loan3",
            maxTopupAmount: 100000,
            minTopupAmount: 10000,
            interestRate: 5.8,
            isPreApproved: true,
            expiryDate: "2023-06-05",
            customerSegment: "Wealth",
            specialPromotionId: "promo1"
        }
    ],
    topupConfirmations: [
        {
            topupId: "topup1",
            loanId: "loan1",
            amount: 3000,
            reference: "TOP123456",
            status: "completed",
            processingDate: "2023-03-20",
            disbursementDate: "2023-03-20",
            firstNewPaymentDate: "2023-04-15"
        }
    ],
    promotionalBanners: [
        {
            id: "promo1",
            title: "Spring Home Improvement",
            description: "Top up your loan for home renovations with special rates",
            startDate: "2023-03-01",
            endDate: "2023-05-31",
            imageUrl: "https://example.com/images/spring-promo.jpg",
            actionText: "Learn More",
            region: "UK",
            customerSegment: "Basic"
        },
        {
            id: "promo2",
            title: "Lunar New Year Offer",
            description: "Celebrate with extra funds at reduced rates",
            startDate: "2023-01-20",
            endDate: "2023-02-28",
            imageUrl: "https://example.com/images/lunar-promo.jpg",
            actionText: "Apply Now",
            region: "HK",
            timeOfDay: "any"
        }
    ],
    userProfile: {
        id: "cust1",
        name: "John Smith",
        region: "UK",
        customerSegment: "Basic",
        email: "john.smith@example.com",
        preferredLanguage: "en-GB"
    }
} 